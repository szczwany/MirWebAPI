// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MirWebAPI.Data;

namespace MirWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MirWebAPI.Models.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("MapId");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("MirWebAPI.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int?>("MapTypeId");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.HasKey("Id");

                    b.HasIndex("MapTypeId");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("MirWebAPI.Models.MapType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("DescriptionKR");

                    b.Property<string>("LevelRange");

                    b.HasKey("Id");

                    b.ToTable("MapTypes");
                });

            modelBuilder.Entity("MirWebAPI.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alive");

                    b.Property<string>("Attack");

                    b.Property<string>("BC");

                    b.Property<string>("Cold");

                    b.Property<string>("Dark");

                    b.Property<string>("Defence");

                    b.Property<string>("Description");

                    b.Property<string>("Experience");

                    b.Property<string>("Fire");

                    b.Property<string>("Holy");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Items");

                    b.Property<string>("Level");

                    b.Property<string>("Light");

                    b.Property<int>("MapId");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.Property<string>("Phantom");

                    b.Property<string>("Tame");

                    b.Property<string>("Wind");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("MirWebAPI.Models.Npc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Explanation");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Location");

                    b.Property<int>("MapId");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.Property<string>("Quest");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("MirWebAPI.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompleteLocation");

                    b.Property<string>("Condition");

                    b.Property<string>("Description");

                    b.Property<string>("IconUrl");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.Property<string>("PrecedingQuest");

                    b.Property<string>("Reward");

                    b.Property<string>("Role");

                    b.Property<string>("StartLocation");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("MirWebAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MirWebAPI.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Consumption");

                    b.Property<string>("Explanation");

                    b.Property<string>("IconUrl");

                    b.Property<string>("Name");

                    b.Property<string>("NameKR");

                    b.Property<int>("RoleId");

                    b.Property<string>("SkillUrl");

                    b.Property<string>("Training");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("MirWebAPI.Models.Floor", b =>
                {
                    b.HasOne("MirWebAPI.Models.Map", "Map")
                        .WithMany("Floors")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MirWebAPI.Models.Map", b =>
                {
                    b.HasOne("MirWebAPI.Models.MapType")
                        .WithMany("Maps")
                        .HasForeignKey("MapTypeId");
                });

            modelBuilder.Entity("MirWebAPI.Models.Monster", b =>
                {
                    b.HasOne("MirWebAPI.Models.Map", "Map")
                        .WithMany("Monsters")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MirWebAPI.Models.Npc", b =>
                {
                    b.HasOne("MirWebAPI.Models.Map", "Map")
                        .WithMany("Npcs")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MirWebAPI.Models.Skill", b =>
                {
                    b.HasOne("MirWebAPI.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
